# Use docker image insted: refer this: https://stackoverflow.com/a/41940240/3763032
# Fix for license: https://stackoverflow.com/a/42736695/3763032
language: android
dist: trusty
sudo: required
jdk:
  - oraclejdk8

env:
  global:
    - ANDROID_HOME=$HOME/android-sdk
    - ANDROID_API=28
    - ANDROID_BUILD_TOOLS=28.0.3
    - ADB_INSTALL_TIMEOUT=5 # minutes
    - CODECOV_TOKEN="9989b72c-b770-491a-b9cd-46810bbc47d4"

before_cache:
  # Do not cache a few Gradle files/directories (see https://docs.travis-ci.com/user/languages/java/#Caching)
  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/

cache:
  directories:
    # Android SDK
    - $HOME/android-sdk-dl
    - $HOME/android-sdk

    # Gradle dependencies
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/

    # Android build cache (see http://tools.android.com/tech-docs/build-cache)
    - $HOME/.android/build-cache

android:
  components:
    - tools
    - platform-tools
    - extra-android-m2repository
  licenses:
    - 'android-sdk-preview-license-52d11cd2'
    - 'android-sdk-license-.+'
    - 'google-gdk-license-.+'

before_install:
  - which sdkmanager
  - echo $ANDROID_HOME
  - chmod +x ./gradlew
  - touch $HOME/.android/repositories.cfg
  - mkdir "$ANDROID_HOME/licenses" || true
  - echo -e "\n8933bad161af4178b1185d1a37fbf41ea5269c55" > "$ANDROID_HOME/licenses/android-sdk-license"
  - echo -e "\n84831b9409646a918e30573bab4c9c91346d8abd" > "$ANDROID_HOME/licenses/android-sdk-preview-license"
  - yes | sdkmanager --update
  - yes | sdkmanager --licenses
#  - yes | sdkmanager "extras;android;m2repository" "extras;google;m2repository" "extras;google;google_play_services"
#  - yes |	sdkmanager "cmake;3.6.4111459"

script:
  - pwd
  - ls -al
  # Unit test
  - ./gradlew test
  # Instrumentation test
  - ./gradlew build jacocoTestReport assembleAndroidTest
  - echo no | android create avd --force -n test -t $ANDROID_TARGET --abi $ANDROID_ABI
  - emulator -avd test -no-skin -no-audio -no-window &
  - android-wait-for-emulator
  - adb shell setprop dalvik.vm.dexopt-flags v=n,o=v
  - ./gradlew connectedCheck
  # upload to fabric crashlyticsUploadDistributionRelease- ./gradlew build jacocoTestReport assembleAndroidTest
  - ./gradlew --no-daemon --parallel --stacktrace clean assembleDevelopmentDebug

after_success:
  - bash <(curl -s https://codecov.io/bash)