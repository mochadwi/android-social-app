# Use docker image insted: refer this: https://stackoverflow.com/a/41940240/3763032
# Fix for license: https://stackoverflow.com/a/42736695/3763032
language: android
sudo: required
jdk:
  - openjdk8

env:
  global:
    - ANDROID_HOME=$HOME/android-sdk
    - ANDROID_API=28
    - ANDROID_BUILD_TOOLS=28.0.3
    - ADB_INSTALL_TIMEOUT=5 # minutes

before_install:
  - touch $HOME/.android/repositories.cfg
  - yes | sdkmanager "platforms;android-28"
  - yes | sdkmanager "build-tools;28.0.3"

before_cache:
  # Do not cache a few Gradle files/directories (see https://docs.travis-ci.com/user/languages/java/#Caching)
  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/

cache:
  directories:
    # Android SDK
    - $HOME/android-sdk-dl
    - $HOME/android-sdk

    # Gradle dependencies
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/

    # Android build cache (see http://tools.android.com/tech-docs/build-cache)
    - $HOME/.android/build-cache

android:
  components:
    - sdk-tools-linux-3859397
    - android-ndk-r18b
    - tools
    - platform-tools
    - extra-android-m2repository
    - extra-google-m2repository
    - extra-android-support
    - extra-google-google_play_services
  licenses:
    - 'android-sdk-preview-license-52d11cd2'
    - 'android-sdk-license-.+'
    - 'google-gdk-license-.+'

before_script:
  # - yes |	sdkmanager "cmake;3.6.4111459"
  #    - yes | sdkmanager --licenses
  - echo $ANDROID_HOME
  - yes | sdkmanager "build-tools;28.0.3" "platforms;android-26" "platforms;android-27" "platforms;android-28"
  - yes | sdkmanager "extras;android;m2repository" "extras;google;m2repository" "extras;google;google_play_services"
  - echo y | sdkmanager "build-tools;28.0.3" "platforms;android-26" "platforms;android-27" "platforms;android-28"
  - echo y | sdkmanager "extras;android;m2repository" "extras;google;m2repository" "extras;google;google_play_services"
  - chmod +x ./gradlew

script:
  - pwd
  - ls -al
  - ./gradlew test
  - ./gradlew --no-daemon --parallel --stacktrace clean assembleDevelopmentDebug # upload to fabric crashlyticsUploadDistributionRelease
# - cd app/build/outputs/apk/debug
# This commands store the actual filename
# - FILE_DEST="$(basename $PWD/*apk)"
# - mv $FILE_DEST $CI_PROJECT_DIR/$FILE_DEST
# - ls -al $CI_PROJECT_DIR
