addons:
  sonarcloud:
    organization: "mochadwi-github"
    token:
      secure: $SONAR_TOKEN # encrypted value of your token
after_success:
  - "bash <(curl -s https://codecov.io/bash)"
android:
  components:
    - tools
    - platform-tools
    - tools # this is necessary fix: https://stackoverflow.com/a/28751112/3763032
    - extra-android-m2repository
    - build-tools-$ANDROID_BUILD_TOOLS
    - android-$ANDROID_TARGET_SDK
    - extra-android-support
    - extra-google-m2repository
    - extra-android-m2repository
    # Specify at least one system image,
    # if you need to run emulator(s) during your tests
    - android-$EMULATOR_API
    - sys-img-armeabi-v7a-google_apis-$EMULATOR_API
    - sys-img-armeabi-v7a-android-$EMULATOR_API
  licenses:
    - android-sdk-preview-license-52d11cd2
    - android-sdk-license-.+
    - google-gdk-license-.+
before_cache:
  # Do not cache a few Gradle files/directories (see https://docs.travis-ci.com/user/languages/java/#Caching)
  - "rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock"
  - "rm -fr $HOME/.gradle/caches/*/plugin-resolution/"
before_install:
  - "touch $HOME/.android/repositories.cfg"
  - "yes | sdkmanager \"platforms;android-28\""
  - "yes | sdkmanager \"build-tools;28.0.3\""
before_script:
  - "chmod +x ./gradlew"
  - pwd
  - "ls -al"
cache:
  directories:
    # Android SDK
    - $HOME/.m2
    - $HOME/android-sdk-dl
    - $HOME/android-sdk

    # Gradle dependencies
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/

    # Android build cache (see http://tools.android.com/tech-docs/build-cache)
    - $HOME/.android/build-cache

    # Sonar cache
    - $HOME/.sonar/cache
dist: trusty
env:
  global:
    - ANDROID_ABI=armeabi-v7a
    - ANDROID_TAG=google_apis
    - ANDROID_TARGET_SDK=28
    - EMULATOR_API=24
    - ADB_INSTALL_TIMEOUT=5

# Only clone the most recent commit.
git:
  depth: 1
jdk: oraclejdk8
jobs:
  include:
    #    - name: "Clean build and test"
    #      script: "./gradlew clean build"
    #      stage: build_and_test
    - name: "Instrumentation tests"
      before_script:
        - android list targets | grep -E '^id:' | awk -F '"' '{$1=""; print $2}' # list all targets
        - "echo no | android create avd --force -n test -t android-$EMULATOR_API --abi $ANDROID_ABI --tag $ANDROID_TAG -c 100M"
        - emulator -avd test -no-skin -no-window &
        - android-wait-for-emulator
        - "adb shell input keyevent 82 &"
        - "adb shell setprop dalvik.vm.dexopt-flags v=n,o=v"
        - adb wait-for-device get-serialno
      script:
        - "./gradlew mergedJacocoReport -PdisablePreDex"
        - |
          ./gradlew assembleAndroidTest -PdisablePreDex
          retval=$?
          if [ $retval -ne 0 ]; then
            echo "error on assembling, exit code: "$retval
            exit $retval
          fi
        - |
          ./gradlew :app:installDebug :app:installDebugAndroidTest -PdisablePreDex
          retval=$?
          if [ $retval -ne 0 ]; then
            echo "error on install, exit code: "$retval
            exit $retval
          fi
        - sonar-scanner
      stage: ui_test

    # todo upload to fabric `crashlyticsUploadDistributionDevelopment` or playstore publishDevelopment
    # e.g: ./gradlew --no-daemon --parallel --stacktrace clean assembleDevelopmentDebug
    - name: Deploy
      script: "./gradlew task"
      stage: deploy
language: android
stages:
  #  - build_and_test
  - ui_test
  - if: "branch = master"
    name: deploy
sudo: required